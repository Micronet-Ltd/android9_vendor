/*
 * Copyright (c) 2017 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

package vendor.qti.hardware.radio.config@1.0;

enum ConfigResultType : int32_t {
    CONFIG_RESULT_SUCCESS = 0,
    CONFIG_RESULT_FAILURE = 1
};

enum ConfigErrorType : int32_t {
    CONFIG_ERR_NONE          = 0,
    CONFIG_ERR_MALFORMED_MSG = 1
};

struct ConfigResponse {
    ConfigResultType result;
    ConfigErrorType error;
};

struct DataQualityMeasurements {
    uint8_t inCallLteRsrpLowValid;
    int16_t inCallLteRsrpLow;

    uint8_t inCallLteRsrpMidValid;
    int16_t inCallLteRsrpMid;

    uint8_t inCallLteRsrpHighValid;
    int16_t inCallLteRsrpHigh;

    uint8_t inCallWifiRssiThresholdLowValid;
    int16_t inCallWifiRssiThresholdLow;

    uint8_t inCallWifiRssiThresholdHighValid;
    int16_t inCallWifiRssiThresholdHigh;

    uint8_t inCallWifiSinrThresholdLowValid;
    int16_t inCallWifiSinrThresholdLow;

    uint8_t inCallWifiSinrThresholdHighValid;
    int16_t inCallWifiSinrThresholdHigh;

    uint8_t idleLteRsrpLowValid;
    int16_t idleLteRsrpLow;

    uint8_t idleLteRsrpMidValid;
    int16_t idleLteRsrpMid;

    uint8_t idleLteRsrpHighValid;
    int16_t idleLteRsrpHigh;

    uint8_t idleWifiRssiThresholdLowValid;
    int16_t idleWifiRssiThresholdLow;

    uint8_t idleWifiRssiThresholdHighValid;
    int16_t idleWifiRssiThresholdHigh;

    uint8_t idleWifiSinrThresholdLowValid;
    int16_t idleWifiSinrThresholdLow;

    uint8_t idleWifiSinrThresholdHighValid;
    int16_t idleWifiSinrThresholdHigh;

    uint8_t ecio1xThresholdLowValid;
    int16_t ecio1xThresholdLow;

    uint8_t ecio1xThresholdHighValid;
    int16_t ecio1xThresholdHigh;
};


enum LtedCategory : int32_t {
    LTED_CATEGORY_HIGH     = 0,
    LTED_CATEGORY_MEDIUM   = 1,
    LTED_CATEGORY_LOW      = 2,
    LTED_CATEGORY_VERY_LOW = 3,
    LTED_CATEGORY_INVALID  = 4
};

struct UINT128 {
    uint64_t low_64;
    uint64_t high_128;
};

enum LtedAnnouncingPolicyRange : int32_t {
    LTED_ANNOUNCING_POLICY_INVALID  = 0,
    LTED_ANNOUNCING_POLICY_SHORT    = 1,
    LTED_ANNOUNCING_POLICY_MEDIUM   = 2,
    LTED_ANNOUNCING_POLICY_LONG     = 3,
    LTED_ANNOUNCING_POLICY_RESERVED = 4
};

struct LtedAnnouncingPolicyInfo {
    string plmnId;
    uint32_t t4005ValidityTime;
    LtedAnnouncingPolicyRange range;
};

struct LtedMonitoringPolicyInfo {
    string plmnId;
    uint32_t t4005ValidityTime;
    uint32_t remainingTime;
};

enum LtedPolicyListMax: int32_t {
    LTED_ANNOUNCING_POLICY_LIST_MAX = 50,
    LTED_MONITORING_POLICY_LIST_MAX = 50
};

struct LtedConfig {
    UINT128 osId;
    string apnName;
    string bakPassword;
    uint32_t announcingPolicyCount;
    LtedAnnouncingPolicyInfo[LtedPolicyListMax:LTED_ANNOUNCING_POLICY_LIST_MAX] announcingPolicy;
    uint32_t monitoringPolicyCount;
    LtedMonitoringPolicyInfo[LtedPolicyListMax:LTED_MONITORING_POLICY_LIST_MAX] monitoringPolicy;
};

/* ov5693_lib.h
 *
 * DESCRIPTION
 * Auto-Generated by Sensor Driver Generator tool
 *
 * Copyright (c) 2017-2018 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __OV5693_LIB_H__
#define __OV5693_LIB_H__

#include "sensor_lib.h"
#define SENSOR_MODEL "ov5693"

#define ov5693_MIN_AGAIN_REG_VAL       16 /* 1.0x */
#define ov5693_MAX_AGAIN_REG_VAL       248 /* 15.5x */

#define ov5693_MIN_DGAIN_REG_VAL       256 /* 1.0x */
#define ov5693_MAX_DGAIN_REG_VAL       256 /* 1.0x */

#define ov5693_MAX_DGAIN_DECIMATOR     256

/* ov5693 FORMULAS */
#define ov5693_MIN_AGAIN    1.0
#define ov5693_MAX_AGAIN    15.5

#define ov5693_MIN_DGAIN    (ov5693_MIN_DGAIN_REG_VAL / 256)
#define ov5693_MAX_DGAIN    (ov5693_MAX_DGAIN_REG_VAL / 256)

#define ov5693_MIN_GAIN     \
    (ov5693_MIN_AGAIN*ov5693_MIN_DGAIN)
#define ov5693_MAX_GAIN    \
    (ov5693_MAX_AGAIN*ov5693_MAX_DGAIN)


#define START_REG_ARRAY \
{ \
  {0x0100, 0x01, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0x0100, 0x00, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0x3208, 0x00, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0x3208, 0x10, 0x00}, \
  {0x3208, 0xa0, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
    {0x0103, 0x01, 0x00}, \
    {0x3001, 0x0a, 0x00}, \
    {0x3002, 0x80, 0x00}, \
    {0x3006, 0x00, 0x00}, \
    {0x3011, 0x21, 0x00}, \
    {0x3012, 0x09, 0x00}, \
    {0x3013, 0x10, 0x00}, \
    {0x3014, 0x00, 0x00}, \
    {0x3015, 0x08, 0x00}, \
    {0x3016, 0xf0, 0x00}, \
    {0x3017, 0xf0, 0x00}, \
    {0x3018, 0xf0, 0x00}, \
    {0x301b, 0xb4, 0x00}, \
    {0x301d, 0x02, 0x00}, \
    {0x3021, 0x20, 0x00}, \
    {0x3022, 0x01, 0x00}, \
    {0x3028, 0x44, 0x00}, \
    {0x3098, 0x03, 0x00}, \
    {0x3099, 0x1e, 0x00}, \
    {0x309a, 0x02, 0x00}, \
    {0x309b, 0x01, 0x00}, \
    {0x309c, 0x00, 0x00}, \
    {0x30a0, 0xd2, 0x00}, \
    {0x30a2, 0x01, 0x00}, \
    {0x30b2, 0x00, 0x00}, \
    {0x30b3, 0x64, 0x00}, \
    {0x30b4, 0x03, 0x00}, \
    {0x30b5, 0x04, 0x00}, \
    {0x30b6, 0x01, 0x00}, \
    {0x3104, 0x21, 0x00}, \
    {0x3106, 0x00, 0x00}, \
    {0x3400, 0x04, 0x00}, \
    {0x3401, 0x00, 0x00}, \
    {0x3402, 0x04, 0x00}, \
    {0x3403, 0x00, 0x00}, \
    {0x3404, 0x04, 0x00}, \
    {0x3405, 0x00, 0x00}, \
    {0x3406, 0x01, 0x00}, \
    {0x3500, 0x00, 0x00}, \
    {0x3503, 0x07, 0x00}, \
    {0x3504, 0x00, 0x00}, \
    {0x3505, 0x00, 0x00}, \
    {0x3506, 0x00, 0x00}, \
    {0x3507, 0x02, 0x00}, \
    {0x3508, 0x00, 0x00}, \
    {0x3509, 0x10, 0x00}, \
    {0x350a, 0x00, 0x00}, \
    {0x3600, 0xbc, 0x00}, \
    {0x3601, 0x0a, 0x00}, \
    {0x3602, 0x38, 0x00}, \
    {0x3612, 0x80, 0x00}, \
    {0x3620, 0x44, 0x00}, \
    {0x3621, 0xb5, 0x00}, \
    {0x3622, 0x0c, 0x00}, \
    {0x3625, 0x10, 0x00}, \
    {0x3630, 0x55, 0x00}, \
    {0x3631, 0xf4, 0x00}, \
    {0x3632, 0x00, 0x00}, \
    {0x3633, 0x34, 0x00}, \
    {0x3634, 0x02, 0x00}, \
    {0x364d, 0x0d, 0x00}, \
    {0x364f, 0xdd, 0x00}, \
    {0x3660, 0x04, 0x00}, \
    {0x3662, 0x10, 0x00}, \
    {0x3663, 0xf1, 0x00}, \
    {0x3665, 0x00, 0x00}, \
    {0x3666, 0x20, 0x00}, \
    {0x3667, 0x00, 0x00}, \
    {0x366a, 0x80, 0x00}, \
    {0x3680, 0xe0, 0x00}, \
    {0x3681, 0x00, 0x00}, \
    {0x3700, 0x42, 0x00}, \
    {0x3701, 0x14, 0x00}, \
    {0x3702, 0xa0, 0x00}, \
    {0x3703, 0xd8, 0x00}, \
    {0x3704, 0x78, 0x00}, \
    {0x3705, 0x02, 0x00}, \
    {0x3709, 0xc3, 0x00}, \
    {0x370a, 0x00, 0x00}, \
    {0x370b, 0x20, 0x00}, \
    {0x370c, 0x0c, 0x00}, \
    {0x370d, 0x11, 0x00}, \
    {0x370e, 0x00, 0x00}, \
    {0x370f, 0x40, 0x00}, \
    {0x3710, 0x00, 0x00}, \
    {0x371a, 0x1c, 0x00}, \
    {0x371b, 0x05, 0x00}, \
    {0x371c, 0x01, 0x00}, \
    {0x371e, 0xa1, 0x00}, \
    {0x371f, 0x0c, 0x00}, \
    {0x3721, 0x00, 0x00}, \
    {0x3724, 0x10, 0x00}, \
    {0x3726, 0x00, 0x00}, \
    {0x372a, 0x01, 0x00}, \
    {0x3730, 0x10, 0x00}, \
    {0x3738, 0x22, 0x00}, \
    {0x3739, 0xe5, 0x00}, \
    {0x373a, 0x50, 0x00}, \
    {0x373b, 0x02, 0x00}, \
    {0x373c, 0x41, 0x00}, \
    {0x373f, 0x02, 0x00}, \
    {0x3740, 0x42, 0x00}, \
    {0x3741, 0x02, 0x00}, \
    {0x3742, 0x18, 0x00}, \
    {0x3743, 0x01, 0x00}, \
    {0x3744, 0x02, 0x00}, \
    {0x3747, 0x10, 0x00}, \
    {0x374c, 0x04, 0x00}, \
    {0x3751, 0xf0, 0x00}, \
    {0x3752, 0x00, 0x00}, \
    {0x3753, 0x00, 0x00}, \
    {0x3754, 0xc0, 0x00}, \
    {0x3755, 0x00, 0x00}, \
    {0x3756, 0x1a, 0x00}, \
    {0x3758, 0x00, 0x00}, \
    {0x3759, 0x0f, 0x00}, \
    {0x376b, 0x44, 0x00}, \
    {0x375c, 0x04, 0x00}, \
    {0x3774, 0x10, 0x00}, \
    {0x3776, 0x00, 0x00}, \
    {0x377f, 0x08, 0x00}, \
    {0x3780, 0x22, 0x00}, \
    {0x3781, 0x0c, 0x00}, \
    {0x3784, 0x2c, 0x00}, \
    {0x3785, 0x1e, 0x00}, \
    {0x378f, 0xf5, 0x00}, \
    {0x3791, 0xb0, 0x00}, \
    {0x3795, 0x00, 0x00}, \
    {0x3796, 0x64, 0x00}, \
    {0x3797, 0x11, 0x00}, \
    {0x3798, 0x30, 0x00}, \
    {0x3799, 0x41, 0x00}, \
    {0x379a, 0x07, 0x00}, \
    {0x379b, 0xb0, 0x00}, \
    {0x379c, 0x0c, 0x00}, \
    {0x37c5, 0x00, 0x00}, \
    {0x37c6, 0x00, 0x00}, \
    {0x37c7, 0x00, 0x00}, \
    {0x37c9, 0x00, 0x00}, \
    {0x37ca, 0x00, 0x00}, \
    {0x37cb, 0x00, 0x00}, \
    {0x37de, 0x00, 0x00}, \
    {0x37df, 0x00, 0x00}, \
    {0x3800, 0x00, 0x00}, \
    {0x3801, 0x00, 0x00}, \
    {0x3802, 0x00, 0x00}, \
    {0x3804, 0x0a, 0x00}, \
    {0x3805, 0x3f, 0x00}, \
    {0x3823, 0x00, 0x00}, \
    {0x3824, 0x00, 0x00}, \
    {0x3825, 0x00, 0x00}, \
    {0x3826, 0x00, 0x00}, \
    {0x3827, 0x00, 0x00}, \
    {0x382a, 0x04, 0x00}, \
    {0x3a04, 0x06, 0x00}, \
    {0x3a05, 0x14, 0x00}, \
    {0x3a06, 0x00, 0x00}, \
    {0x3a07, 0xfe, 0x00}, \
    {0x3b00, 0x00, 0x00}, \
    {0x3b02, 0x00, 0x00}, \
    {0x3b03, 0x00, 0x00}, \
    {0x3b04, 0x00, 0x00}, \
    {0x3b05, 0x00, 0x00}, \
    {0x3e07, 0x20, 0x00}, \
    {0x4000, 0x08, 0x00}, \
    {0x4001, 0x04, 0x00}, \
    {0x4002, 0x45, 0x00}, \
    {0x4004, 0x08, 0x00}, \
    {0x4005, 0x18, 0x00}, \
    {0x4006, 0x20, 0x00}, \
    {0x4008, 0x24, 0x00}, \
    {0x4009, 0x10, 0x00}, \
    {0x400c, 0x00, 0x00}, \
    {0x400d, 0x00, 0x00}, \
    {0x404e, 0x37, 0x00}, \
    {0x404f, 0x8f, 0x00}, \
    {0x4058, 0x00, 0x00}, \
    {0x4101, 0xb2, 0x00}, \
    {0x4303, 0x00, 0x00}, \
    {0x4304, 0x08, 0x00}, \
    {0x4307, 0x30, 0x00}, \
    {0x4311, 0x04, 0x00}, \
    {0x4315, 0x01, 0x00}, \
    {0x4511, 0x05, 0x00}, \
    {0x4512, 0x01, 0x00}, \
    {0x4806, 0x00, 0x00}, \
    {0x4816, 0x52, 0x00}, \
    {0x481f, 0x30, 0x00}, \
    {0x4826, 0x2c, 0x00}, \
    {0x4831, 0x64, 0x00}, \
    {0x4d00, 0x04, 0x00}, \
    {0x4d01, 0x71, 0x00}, \
    {0x4d02, 0xfd, 0x00}, \
    {0x4d03, 0xf5, 0x00}, \
    {0x4d04, 0x0c, 0x00}, \
    {0x4d05, 0xcc, 0x00}, \
    {0x4837, 0x0a, 0x00}, \
    {0x5000, 0x06, 0x00}, \
    {0x5001, 0x01, 0x00}, \
    {0x5002, 0x00, 0x00}, \
    {0x5003, 0x20, 0x00}, \
    {0x5013, 0x00, 0x00}, \
    {0x5046, 0x0a, 0x00}, \
    {0x5780, 0xfc, 0x00}, \
    {0x5781, 0x13, 0x00}, \
    {0x5782, 0x03, 0x00}, \
    {0x5786, 0x20, 0x00}, \
    {0x5787, 0x40, 0x00}, \
    {0x5788, 0x08, 0x00}, \
    {0x5789, 0x08, 0x00}, \
    {0x578a, 0x02, 0x00}, \
    {0x578b, 0x01, 0x00}, \
    {0x578c, 0x01, 0x00}, \
    {0x578d, 0x0c, 0x00}, \
    {0x578e, 0x02, 0x00}, \
    {0x578f, 0x01, 0x00}, \
    {0x5790, 0x01, 0x00}, \
    {0x5791, 0xff, 0x00}, \
    {0x5842, 0x01, 0x00}, \
    {0x5843, 0x2b, 0x00}, \
    {0x5844, 0x01, 0x00}, \
    {0x5845, 0x92, 0x00}, \
    {0x5846, 0x01, 0x00}, \
    {0x5847, 0x8f, 0x00}, \
    {0x5848, 0x01, 0x00}, \
    {0x5849, 0x0c, 0x00}, \
    {0x5e00, 0x00, 0x00}, \
    {0x5e10, 0x0c, 0x00}, \
    {0x3810, 0x00, 0x00}, \
    {0x3811, 0x10, 0x00}, \
    {0x3812, 0x00, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
    {0x3501, 0x7b, 0x00}, \
    {0x3502, 0x00, 0x00}, \
    {0x350b, 0x40, 0x00}, \
    {0x3708, 0xe2, 0x00}, \
    {0x3803, 0x00, 0x00}, \
    {0x3806, 0x07, 0x00}, \
    {0x3807, 0xa3, 0x00}, \
    {0x3808, 0x0a, 0x00}, \
    {0x3809, 0x20, 0x00}, \
    {0x380a, 0x07, 0x00}, \
    {0x380b, 0x98, 0x00}, \
    {0x380c, 0x0A, 0x00}, \
    {0x380d, 0x80, 0x00}, \
    {0x380e, 0x07, 0x00}, \
    {0x380f, 0xC0, 0x00}, \
    {0x3814, 0x11, 0x00}, \
    {0x3815, 0x11, 0x00}, \
    {0x3820, 0x00, 0x00}, \
    {0x3821, 0x1e, 0x00}, \
    {0x3813, 0x06, 0x00}, \
}

#define RES1_REG_ARRAY \
{ \
    {0x3501, 0x2e, 0x00}, \
    {0x3502, 0x80, 0x00}, \
    {0x3708, 0xe6, 0x00}, \
    {0x3803, 0xf4, 0x00}, \
    {0x3806, 0x06, 0x00}, \
    {0x3807, 0xab, 0x00}, \
    {0x3808, 0x05, 0x00}, \
    {0x3809, 0x00, 0x00}, \
    {0x380a, 0x02, 0x00}, \
    {0x380b, 0xd0, 0x00}, \
    {0x380c, 0x0D, 0x00}, \
    {0x380d, 0xB0, 0x00}, \
    {0x380e, 0x02, 0x00}, \
    {0x380f, 0xF8, 0x00}, \
    {0x3814, 0x31, 0x00}, \
    {0x3815, 0x31, 0x00}, \
    {0x3820, 0x01, 0x00}, \
    {0x3821, 0x1f, 0x00}, \
    {0x3813, 0x02, 0x00}, \
    {0x350b, 0xf0, 0x00}, \
}

static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x6C,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0x300a,
      .sensor_id = 0x5690,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
      },
      .size = 10,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VDIG,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 0,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 0,
        },
      },
      .size_down = 8,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
    .filter_arrangement = SENSOR_BGGR,
  },
  .output_reg_addr =
  {
    .x_output = 0x3808,
    .y_output = 0x380a,
    .line_length_pclk = 0x380c,
    .frame_length_lines = 0x380e,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x3500,
    .global_gain_addr = 0x350a,
    .vert_offset = 16,
  },
  .aec_info =
  {
    .min_gain = 1.0,
    .max_gain = 15.5,
    .max_analog_gain = 15.5,
    .max_linecount = 26880,
  },
  .sensor_num_frame_skip = 2,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.4,
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR,
    .crop_factor = 1.0,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 2592,
      .height = 1944,
    },
    .left_dummy = 0,
    .right_dummy = 0,
    .top_dummy = 0,
    .bottom_dummy = 0,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = 64,
    .gr_pedestal = 64,
    .gb_pedestal = 64,
    .b_pedestal = 64,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
        },
      },
    },
    .size = 1,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_WORD_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .embedded_data_enable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .embedded_data_disable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
           {
             {0x4303, 0x00, 0x00},
             {0x4320, 0x80, 0x00}
           },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a =
           {
             {0x4303, 0x00, 0x00},
             {0x4320, 0x82, 0x00}
           },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
      {
        .mode = SENSOR_TEST_PATTERN_COLOR_BARS,
        .settings =
        {
          .reg_setting_a =
           {
             {0x4320, 0x80, 0x00},
             {0x4303, 0x08, 0x00}
           },
          .addr_type = CAMERA_I2C_WORD_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
    },
    .size = 4,
    .solid_mode_addr =
    {
      .r_addr = 0x4327,
      .gr_addr = 0x4329,
      .gb_addr = 0x4327,
      .b_addr = 0x4323,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 60,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_WORD_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 2,
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
        .x_output = 2592,
        .y_output = 1944,
        .line_length_pclk = 2688,
        .frame_length_lines = 1984,
        .vt_pixel_clk = 159989760,
        .op_pixel_clk = 198000000,
        .binning_factor = 1,
        .min_fps = 7.500,
        .max_fps = 30.00,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
      },
      /* Res 1 */
      {
        .x_output = 1280,
        .y_output = 720,
        .line_length_pclk = 3504,
        .frame_length_lines = 760,
        .vt_pixel_clk = 159782400,
        .op_pixel_clk = 198000000,
        .binning_factor = 1,
        .min_fps = 7.500,
        .max_fps = 60.00,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 0,
      },
    },
    .size = 2,
  },
  .csi_params =
  {
    .lane_cnt = 2,
    .settle_cnt = 0xa,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 1 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
    },
    .size = 2,
  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 1 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
    .size = 2,
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 0,
        .height = 0,
        .stats_type = 0,
      },
    },
    .size = 0,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .app_delay = {
    [SENSOR_DELAY_ANALOG_SENSOR_GAIN] = 0,
  },
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif
